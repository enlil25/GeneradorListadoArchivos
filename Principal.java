/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Principal.java
 *
 * Created on 25-may-2012, 20:33:17
 */
package generahtmlofdir;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.SwingWorker;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;

/**
 *
 * @author Practicas
 */
public class Principal extends javax.swing.JFrame {

    /** Creates new form Principal */
    public Principal() {
        initComponents();
        panel3.setVisible(false);
        panel8.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        panel3 = new javax.swing.JPanel();
        label_name_file = new javax.swing.JLabel();
        txt_name_file = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_directory_input = new javax.swing.JTextField();
        button_open = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        label_state = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        button_generate = new javax.swing.JButton();
        button_cancel = new javax.swing.JButton();
        button_hide = new javax.swing.JButton();
        checkbox_include_directory = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        panel8 = new javax.swing.JPanel();
        scroll_txtarea_output_html = new javax.swing.JScrollPane();
        txtarea_output_html = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_directory_output = new javax.swing.JTextField();
        button_directory_output = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Generador HTML V.1");

        label_name_file.setText("Name File Output");

        txt_name_file.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_name_fileFocusGained(evt);
            }
        });

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_name_file, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_name_file, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel3Layout.createSequentialGroup()
                .addGroup(panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_name_file)
                    .addComponent(txt_name_file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Directory Input");

        txt_directory_input.setEnabled(false);
        txt_directory_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_directory_inputActionPerformed(evt);
            }
        });

        button_open.setText("Open Directory");
        button_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_openActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(txt_directory_input, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_open)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(button_open)
                .addComponent(txt_directory_input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        label_state.setForeground(new java.awt.Color(255, 51, 51));

        button_generate.setText("Generate");
        button_generate.setEnabled(false);
        button_generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_generateActionPerformed(evt);
            }
        });

        button_cancel.setText("Cancel");
        button_cancel.setEnabled(false);
        button_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_cancelActionPerformed(evt);
            }
        });

        button_hide.setText("Hide load");
        button_hide.setEnabled(false);
        button_hide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_hideActionPerformed(evt);
            }
        });

        checkbox_include_directory.setSelected(true);
        checkbox_include_directory.setText("Include subdirectorys");

        jCheckBox2.setSelected(true);
        jCheckBox2.setText("visible icons");

        jCheckBox3.setSelected(true);
        jCheckBox3.setText("generate zip");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(button_generate)
                .addGap(27, 27, 27)
                .addComponent(button_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(button_hide, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkbox_include_directory)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(checkbox_include_directory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(button_generate)
                    .addComponent(button_cancel)
                    .addComponent(button_hide))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label_state))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(label_state)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        txtarea_output_html.setColumns(20);
        txtarea_output_html.setRows(5);
        scroll_txtarea_output_html.setViewportView(txtarea_output_html);

        javax.swing.GroupLayout panel8Layout = new javax.swing.GroupLayout(panel8);
        panel8.setLayout(panel8Layout);
        panel8Layout.setHorizontalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 486, Short.MAX_VALUE)
            .addGroup(panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel8Layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addComponent(scroll_txtarea_output_html, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        panel8Layout.setVerticalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 231, Short.MAX_VALUE)
            .addGroup(panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scroll_txtarea_output_html, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jLabel4.setText("Directory Output");

        txt_directory_output.setEnabled(false);

        button_directory_output.setText("Open Directory");
        button_directory_output.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_directory_outputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_directory_output, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(button_directory_output)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4)
                .addComponent(button_directory_output)
                .addComponent(txt_directory_output, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(panel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void txt_directory_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_directory_inputActionPerformed
}//GEN-LAST:event_txt_directory_inputActionPerformed

private void button_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_openActionPerformed

    JFileChooser jfc = new JFileChooser();
    jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    if (Directory_selected != null) {
        jfc.setSelectedFile(Directory_selected);
    }
    int c = jfc.showOpenDialog(button_open);
    if (c == -1) {
        return;
    }
    if (c == JFileChooser.APPROVE_OPTION) {
        Directory_selected = jfc.getSelectedFile();
        txt_directory_input.setText(Directory_selected.getAbsolutePath());
        txt_directory_input.setEditable(false);
    }
}//GEN-LAST:event_button_openActionPerformed
    File Directory_selected = null; //file de directorio a listar
    private String name_file_HTML = null; //ruta completa del archivo a generar
    private File Directory_selected_output = null; //file del directorio de salida (solo directorio)
    private boolean stoped = false; //condicion de parada de hilo listar

private void button_generateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_generateActionPerformed


    if (txt_directory_input.getText().trim().length() == 0) {
        JOptionPane.showMessageDialog(button_generate, "not found Directory input");
        return;
    }
    if (txt_directory_output.getText().trim().length() == 0) {
        JOptionPane.showMessageDialog(button_generate, "not found Directory Output");
        return;
    }
    if (txt_name_file.getText().trim().length() == 0) {
        JOptionPane.showMessageDialog(button_generate, "not found Name file Output");
        return;
    }

    File fi = null;
    PrintWriter pw = null;
    String extension = ".html";

    //se reinicia stoped
    stoped = false;
    //se reinicia jtextarea
    txtarea_output_html.setText("");
    //panel8 se hace visible
    panel8.setVisible(true);

    name_file_HTML = txt_directory_output.getText().trim()
            + File.separator + txt_name_file.getText().trim()
            + extension;

    try {
        fi = new File(name_file_HTML);
        //verifica si el fichero existe
        if (fi.exists()) {
            int s = JOptionPane.showConfirmDialog(null, "File:" + fi.getName() + " already exists"
                    + "\nwant to overwrite the file");

            if (s == JOptionPane.CANCEL_OPTION || s == JOptionPane.NO_OPTION || s == -1) {
                {
                    return;
                }
            }
            if (s == JOptionPane.YES_OPTION) {
                pw = new PrintWriter(fi);
            }
        } else {
            pw = new PrintWriter(fi);
        }
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(button_generate, "<html>can not open file output, because "
                + "there was an error of E/S <br>try again</html>");
        return;
    }
    //se escribe el encabezado
    pw.println("<html>\n<title>Salida HTML</title>\n");
    pw.println("<body><table border=2>\n");
    //se escribe en jtextarea
    txtarea_output_html.append("<html>\n<title>Salida HTML</title>\n");
    txtarea_output_html.append("<body><table border=2>\n");

    HiloGenerateTrabajador tgenerateTrabajador = null;
    tgenerateTrabajador = new HiloGenerateTrabajador(pw, txtarea_output_html, Directory_selected.getAbsolutePath());
    tgenerateTrabajador.execute();
}//GEN-LAST:event_button_generateActionPerformed

private void button_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_cancelActionPerformed
    stop_list();
    button_generate.setEnabled(true);
    button_cancel.setEnabled(false);
    button_hide.setEnabled(false);
}//GEN-LAST:event_button_cancelActionPerformed

private void button_directory_outputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_directory_outputActionPerformed


    JFileChooser jfc = new JFileChooser();
    jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    if (Directory_selected_output != null) {
        jfc.setSelectedFile(Directory_selected_output);
    }
    int c = jfc.showOpenDialog(button_directory_output);
    if (c == -1) {
        return;
    }
    if (c == JFileChooser.APPROVE_OPTION) {
        Directory_selected_output = jfc.getSelectedFile();
        name_file_HTML = Directory_selected_output.getAbsolutePath();

        txt_directory_output.setText(name_file_HTML);
        txt_directory_output.setEditable(false);

        label_name_file.setVisible(true);
        txt_name_file.setVisible(true);
        button_generate.setEnabled(true);
        panel3.setVisible(true);
    }
}//GEN-LAST:event_button_directory_outputActionPerformed

private void button_hideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_hideActionPerformed

    if (button_hide.getText().equals("Hide load")) {
        panel8.setVisible(false);
        button_hide.setText("Show process");
    } else if (button_hide.getText().equals("Show process")) {
        panel8.setVisible(true);
        button_hide.setText("Hide load");
    }
}//GEN-LAST:event_button_hideActionPerformed

private void txt_name_fileFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_name_fileFocusGained

    txt_name_file.getDocument().addDocumentListener(
            new ListenerDocument());
}//GEN-LAST:event_txt_name_fileFocusGained

    private class ListenerDocument implements DocumentListener {

        public void insertUpdate(DocumentEvent e) {
            check();
        }

        public void removeUpdate(DocumentEvent e) {
            check();
        }

        public void changedUpdate(DocumentEvent e) {
            check();
        }

        private void check() {
            String name = txt_name_file.getText().trim();
            if (name.indexOf(".") != -1) {
                label_state.setText("<html>Name invalid Character \".\" not is permited"
                        + " try another name</html>");
                button_generate.setEnabled(false);
                return;
            } else if (name.isEmpty()) {
                label_state.setText("<html>Name invalid Character \" \" not is permited"
                        + " try another name</html>");
                button_generate.setEnabled(false);
                return;

            } else {
                label_state.setText("");
                button_generate.setEnabled(true);
                return;
            }
        }
    }

    private void stop_list() {
        stoped = true;
    }

    public class HiloGenerateTrabajador extends SwingWorker<Void, String> {

        private PrintWriter pw;
        private JTextArea salida;
        private String directorio;

        public HiloGenerateTrabajador(PrintWriter pw, JTextArea salida, String directorio) {
            this.pw = pw;
            this.salida = salida;
            this.directorio = directorio;
        }

        protected void done() {
            //se escribe en flujo
            pw.println("</table>\n");
            pw.println("</body>\n");
            pw.println("</html>\n");
            //se escribe en jtextarea
            txtarea_output_html.append("</table>\n");
            txtarea_output_html.append("</body>\n");
            txtarea_output_html.append("</html>\n");
            //se cierra el flujo despues
            pw.close();
            //se activa los botones
            button_generate.setEnabled(true);
            button_cancel.setEnabled(false);
            button_hide.setEnabled(false);

        }

        public Void doInBackground() {

            if (checkbox_include_directory.isSelected()) {
                listDirectory(directorio, salida, pw);
            } else {
                listDirectory2(directorio, salida, pw);
            }


            return null;
        }

        protected void process(List<String> lista) {

            button_generate.setEnabled(false);
            button_cancel.setEnabled(true);
            button_hide.setEnabled(true);

            for (int i = 0; i < lista.size(); i++) {
                txtarea_output_html.append(lista.get(i));
            }
        }

        private void listDirectory(String directory, JTextArea salida, PrintWriter pw) {
            File fi = null;
            fi = new File(directory);
            File files[] = fi.listFiles();
            if (files == null) {
                return;
            }
            for (int i = 0; i < files.length; i++) {
                if (stoped) {
                    return;
                }

                if (files[i].isFile()) {
                    String linea = addLine(files[i].getName(),
                            files[i].getAbsolutePath(),
                            files[i].length());
                    pw.print(linea);
                    publish(linea);
                } else {
                    listDirectory(files[i].getAbsolutePath(), salida, pw);
                }
            }
        }
        
        //listar directorio sin incluir subcarpetas
        private void listDirectory2(String directory, JTextArea salida, PrintWriter pw) {
            File fi = null;
            fi = new File(directory);
            File files[] = fi.listFiles();
            if (files == null) {
                return;
            }
            for (int i = 0; i < files.length; i++) {
                if (stoped) {
                    return;
                }
                String linea = addLine(files[i].getName(),
                        files[i].getAbsolutePath(),
                        files[i].length());
                pw.print(linea);
                salida.append(linea);
            }
        }
    }

    private void listDirectory(String directory, JTextArea salida, PrintWriter pw) {
        File fi = null;
        fi = new File(directory);
        File files[] = fi.listFiles();
        if (files == null) {
            return;
        }
        for (int i = 0; i < files.length; i++) {
            if (stoped) {
                return;
            }

            if (files[i].isFile()) {
                String linea = addLine(files[i].getName(),
                        files[i].getAbsolutePath(),
                        files[i].length());
                pw.print(linea);
                salida.append(linea);
            } else {
                listDirectory(files[i].getAbsolutePath(), salida, pw);
            }
        }
    }

    //listar directorio sin incluir subcarpetas
    private String addLine(String name, String path, long size) {
        String line = "<tr>"
                + "<td>" + name + "</td>"
                + "<td>" + path + "</td>"
                + "<td>" + size + "</td>"
                + "</tr>\n";
        return line;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_cancel;
    private javax.swing.JButton button_directory_output;
    private javax.swing.JButton button_generate;
    private javax.swing.JButton button_hide;
    private javax.swing.JButton button_open;
    private javax.swing.JCheckBox checkbox_include_directory;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_name_file;
    private javax.swing.JLabel label_state;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel8;
    private javax.swing.JScrollPane scroll_txtarea_output_html;
    private javax.swing.JTextField txt_directory_input;
    private javax.swing.JTextField txt_directory_output;
    private javax.swing.JTextField txt_name_file;
    private javax.swing.JTextArea txtarea_output_html;
    // End of variables declaration//GEN-END:variables
}
